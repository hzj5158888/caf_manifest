From 548a8371f3f58a8ed5e0d74daca20d28f311cf1d Mon Sep 17 00:00:00 2001
From: Aaron Kling <webgeek1234@gmail.com>
Date: Thu, 31 Dec 2015 22:33:50 -0600
Subject: [PATCH 4/4] Add vendor hook to handle_control_message

This is needed for Nvidia Shield devices to handle a
'restart consolemode' request from a blobbed stock app.

The vendor function is expected to return non-0 if it did
not handle the message and 0 if it did (or wants it ignored).

Forward port of 119414.

Change-Id: Ia8e4ba0bbf561f29f72862cd986f1660d7b501da
---
 init/init.cpp        | 4 ++++
 init/vendor_init.cpp | 7 +++++++
 init/vendor_init.h   | 3 +++
 3 files changed, 14 insertions(+)

diff --git a/init/init.cpp b/init/init.cpp
index 9d88409..4db1e73 100755
--- a/init/init.cpp
+++ b/init/init.cpp
@@ -66,6 +66,7 @@
 #include "ueventd.h"
 #include "util.h"
 #include "watchdogd.h"
+#include "vendor_init.h"
 
 struct selabel_handle *sehandle;
 struct selabel_handle *sehandle_prop;
@@ -141,6 +142,9 @@ static void restart_processes()
 }
 
 void handle_control_message(const std::string& msg, const std::string& name) {
+    if (!vendor_handle_control_message(msg, name)) {
+        return;
+    }
     Service* svc = ServiceManager::GetInstance().FindServiceByName(name);
     if (svc == nullptr) {
         ERROR("no such service '%s'\n", name.c_str());
diff --git a/init/vendor_init.cpp b/init/vendor_init.cpp
index d3fd5ff..4b322bb 100644
--- a/init/vendor_init.cpp
+++ b/init/vendor_init.cpp
@@ -28,6 +28,7 @@ IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 #include "vendor_init.h"
+#include <errno.h>
 
 /* init vendor override stubs */
 
@@ -35,3 +36,9 @@ __attribute__ ((weak))
 void vendor_load_properties()
 {
 }
+
+__attribute__ ((weak))
+int vendor_handle_control_message(const std::string& msg, const std::string& name) {
+{
+    return -ENOSYS;
+}
diff --git a/init/vendor_init.h b/init/vendor_init.h
index 9afb449..9491bc4 100644
--- a/init/vendor_init.h
+++ b/init/vendor_init.h
@@ -27,7 +27,10 @@ OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
 IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 
+#include <string>
+
 #ifndef __INIT_VENDOR__H__
 #define __INIT_VENDOR__H__
 extern void vendor_load_properties(void);
+extern int vendor_handle_control_message(const std::string& msg, const std::string& name);
 #endif /* __INIT_VENDOR__H__ */
-- 
2.9.3

